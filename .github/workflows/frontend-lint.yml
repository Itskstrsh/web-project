name: frontend-lint

on:
  pull_request:
    branches: [dev, main]           # запускается на любой PR в dev/main
  push:
    branches: [dev]                 # и на пуши в dev

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  frontend-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Определяем, есть ли фронтенд и какие скрипты доступны
      - name: Detect frontend & scripts
        id: detect
        run: |
          if [ -f frontend/package.json ]; then
            echo "HAS_FRONTEND=true" >> $GITHUB_ENV
            if [ -f frontend/package-lock.json ]; then
              echo "HAS_LOCK=true" >> $GITHUB_ENV
            else
              echo "HAS_LOCK=false" >> $GITHUB_ENV
            fi
            # смотрим наличие скриптов по строкам в package.json
            grep -q '"lint"\s*:' frontend/package.json && echo "HAS_LINT=true" >> $GITHUB_ENV || echo "HAS_LINT=false" >> $GITHUB_ENV
            grep -q '"format:check"\s*:' frontend/package.json && echo "HAS_FORMAT=true" >> $GITHUB_ENV || echo "HAS_FORMAT=false" >> $GITHUB_ENV
            grep -q '"stylelint"\s*:' frontend/package.json && echo "HAS_STYLELINT=true" >> $GITHUB_ENV || echo "HAS_STYLELINT=false" >> $GITHUB_ENV
          else
            echo "HAS_FRONTEND=false" >> $GITHUB_ENV
          fi

      # Ставим Node c кешем, если есть lock-файл
      - name: Setup Node (cached)
        if: env.HAS_FRONTEND == 'true' && env.HAS_LOCK == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      # Или без кеша, если lock-файла нет
      - name: Setup Node (no cache)
        if: env.HAS_FRONTEND == 'true' && env.HAS_LOCK != 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install deps
        if: env.HAS_FRONTEND == 'true'
        working-directory: frontend
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi

      - name: ESLint
        if: env.HAS_FRONTEND == 'true' && env.HAS_LINT == 'true'
        working-directory: frontend
        run: npm run lint

      - name: Prettier (check)
        if: env.HAS_FRONTEND == 'true' && env.HAS_FORMAT == 'true'
        working-directory: frontend
        run: npm run format:check

      - name: Stylelint (optional)
        if: env.HAS_FRONTEND == 'true' && env.HAS_STYLELINT == 'true'
        working-directory: frontend
        run: npm run stylelint

      # Stub — если фронта нет (или нет скриптов)
      - name: Stub (no frontend or scripts)
        if: env.HAS_FRONTEND != 'true'
        run: |
          echo "No frontend/package.json — skipping lint. (Stub success)"
          exit 0
